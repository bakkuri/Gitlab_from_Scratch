gitlab-ci.yml
984 bytes
include:
  - project: 'iac/common/common-pipeline'
    ref: master
    file: '/cijobs/terraform.yml'
variables:
  ENVIRONMENT: dev
  CP_TERRAFORM_MODULE_DIR: terraform/tf_aurora
  CP_TERRAFORM_MODULE_NAME: mcps
  CP_TERRAFORM_INIT_SCRIPT: ./tf_init.sh
  CP_TERRAFORM_VALIDATE_OPTIONS: -var-file=dev.tfvars
stages:
  - validate
  - test
  - publish
  - report
terraform-validate:
  stage: validate
  extends: .cp-terraform-validate
  tags:
    - leda-k8s-nonprod
terraform-test:
  stage: test
  extends: .cp-terraform-test
  tags:
    - leda-k8s-nonprod
terraform-publish:
  stage: publish
  extends: .cp-terraform-publish
  artifacts:
    expire_in: 4 hours
    paths:
      - ./terraform.url  
  tags:
    - leda-k8s-nonprod
report:
  stage: report
  before_script: 
    - export CP_REPORT_COMPONENT_KEY=${CP_TERRAFORM_MODULE_NAME^^} && export CP_REPORT_COMPONENT_KEY=$CP_REPORT_COMPONENT_KEY'_TERRAFORM'
  extends: .cp-reporting
  when: always
  tags:
    - leda-k8s-nonprod
    
app-terraform/terraform/tf_aurora:
aurora.tf
2.86 KiB
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
module "rds_aurora" {
  source                              = "git::https://terraform-auto:wcsuCJ5Rh7STMtKe5-7M@git.services.securitysvcs.verizon.com/iac/shared/tf-modules/rds-aurora.git?ref=v2.0.2"
  name                                = "${var.mcps_rds_aurora_name}"
  engine                              = "${var.mcps_rds_aurora_eng}"
  engine_version                      = "${var.mcps_rds_aurora_eng_version}"
  subnets                             = ["${var.subnets}"]
  vpc_id                              = "${var.vpcid}"
  storage_encrypted                   = "${var.mcps_rds_aurora_storage_encrypt}"
  replica_count                       = "${var.mcps_rds_aurora_replica_count}"
  replica_scale_enabled               = "${var.mcps_rds_aurora_replica_autoscaling}"
  replica_scale_min                   = "${var.mcps_rds_aurora_replica_scale_min}"
  replica_scale_max                   = "${var.mcps_rds_aurora_replica_scale_max}"
  deletion_protection                 = "${var.mcps_rds_aurora_deletion_protection}"
  monitoring_interval                 = "${var.mcps_rds_aurora_monitoring_interval}"
  instance_type                       = "${var.mcps_rds_aurora_instance_type}"
  kms_key_id                          = "${data.aws_kms_key.mcps_kms.arn}"
  db_parameter_group_name             = "${aws_db_parameter_group.vz-vss-rds-postgresdb-paramater-group-01.name}"
  db_cluster_parameter_group_name     = "${aws_rds_cluster_parameter_group.vz-vss-rds-postgresdb-cluster-01.name}"
  enabled_cloudwatch_logs_exports     = "${var.cloudwatch_mcps_cloudwatch_stream_names}"
  database_name                       = "${var.mcps_rds_database_name}"
  username                            = "${var.mcps_user_name}"
  secret_name                         = "${var.mcps_secret_name}"
  deletion_protection                 = "${var.mcps_rds_aurora_deletion_protection}"
  iam_database_authentication_enabled = "${var.iam_database_authentication_enabled}"
  enhanced_monitoring_role_arn        = "${var.enhanced_monitoring_role_arn}"
  allowed_security_groups             = "${var.allowed_security_groups}"
  allowed_security_groups_count       = "${length(var.allowed_security_groups)}"
  apply_immediately                   = "${var.aurora_mcps_rds_aurora_apply_immediately}"
  tags                                = "${var.mcps_rds_aurora_tags}"
}
resource "aws_db_parameter_group" "vz-vss-rds-postgresdb-paramater-group-01" {
  name        = "${var.aurora_mcps_postgresdb_paramater_group_01_name}"
  family      = "${var.aurora_mcps_postgresdb_paramater_group_01_family}"
  description = "${var.aurora_mcps_postgresdb_paramater_group_01_desc}"
}
resource "aws_rds_cluster_parameter_group" "vz-vss-rds-postgresdb-cluster-01" {
  name        = "${var.aurora_mcps_postgresdb_cluster_01_name}"
  family      = "${var.aurora_mcps_postgresdb_cluster_01_family}"
  description = "${var.aurora_mcps_postgresdb_cluster_01_desc}"
  
 aurora_kms.tf
893 bytes
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
module "mcps_kms" {
  source                  = "git::https://terraform:6tLffWuwC2CxNx6mLVgb@git.services.securitysvcs.verizon.com/iac/shared/terraform-modules.git//AWS/modules/kms?ref=1.0.0"
  description             = "${var.mcps_kms_description}"
  deletion_window_in_days = "${var.mcps_kms_deletion_windows_days}"
  enable_key_rotation     = "${var.mcps_kms_enable_key_rotation}"
  alias_name              = "${var.mcps_kms_alias_name}"
  tags = "${var.mcps_kms_tags}"
  policy = <<POLICY
  {
    "Version": "2012-10-17",
    "Id": "mcps_kms_aurora_key",
    "Statement": [
        {
            "Sid": "Enable IAM User Permissions",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::${data.aws_caller_identity.current.account_id}:root"
            },
            "Action": "kms:*",
            "Resource": "*"
        }
    ]
  }
  POLICY
}

data_providers.tf
114 bytes
1
2
3
4
5
data "aws_kms_key" "mcps_kms" {
  key_id = "${module.mcps_kms.key_id}"
}
data "aws_caller_identity" "current" {}

dev.tfvars
3.84 KiB
#This file specifies the environment specific variables
vpcid = "vpc-017b6d1a61a0a0d66"
subnets = ["subnet-0e4cb2129b7c9ab8a","subnet-0a37fafdc0b361185","subnet-0f2190e930346741a"] 
mcps_kms_description           = "AWS KMS for Aurora DB for the mcps projects."
mcps_kms_deletion_windows_days = "30"
mcps_kms_enable_key_rotation   = "true"
mcps_kms_alias_name            = "alias/mcps_rds_kms_dev"
# Start tags
mcps_kms_tags = {
  "Name"           = "mcps_rds_kms_dev",
  "Team"           = "mcps",
  "Userid"         = "",
  "Email"          = "",
  "Purpose"        = "Key for RDS mcps Postgresql DB",
  "Vsad"           = "",
  "Environment"    = "Nonprod"
  "Level"          = "Dev1",
  "Organization"   = "VSS"
  "Role"           = "DB"
}
# End tags
# End aurora_kms.tf variables
# Start aurora.tf variables
mcps_rds_aurora_name                      = "vz-vss-mcps-dev1-mcps-rds-01"
mcps_rds_database_name                    = "mcps"
mcps_rds_aurora_eng                       = "aurora-postgresql"
mcps_rds_aurora_eng_version               = "10.18"
mcps_rds_aurora_storage_encrypt           = "true"
mcps_rds_aurora_replica_count             = 4
mcps_rds_aurora_replica_autoscaling       = true
mcps_rds_aurora_replica_scale_min         = 2
mcps_rds_aurora_replica_scale_max         = 4
mcps_rds_aurora_deletion_protection       = false
iam_database_authentication_enabled      = true
mcps_rds_aurora_monitoring_interval       = 60
mcps_rds_aurora_instance_type             = "db.r4.large"
mcps_rds_aurora_cloudwatch_create_alarms  = true
mcps_user_name                            = "mc"
mcps_secret_name                          = "mc/mc-dev1/rds_secrets"
allowed_security_groups                  = ["sg-0c80dbf34602c8","sg-0cc07733b88ecb3c7","sg-031bbd80105aedf40","sg-0cc07733b88ecb3c7","sg-02c989ff77cb60cf0","sg-0c8d61e68c","sg-0c5148cf0c40fd366"]
aurora_mcps_rds_deletion_protection       = false
enhanced_monitoring_role_arn              = "arn:aws:iam::493418970112:role/vz-vss-rds-aurora-monitoring-role"   
# Start tags
mcps_rds_aurora_tags = {
  "Name"         = "mcps_rds_postgres_dev",
  "Team"         = "mcps",
  "Userid"       = "",
  "Email"        = "",
  "Purpose"      = "RDS Postgresql mcps Dev DB",
  "Vsad"         = "",
  "Environment"  = "Nonprod"
  "Level"        = "Dev1"
  "Organization" = "VSS"
  "Role"         = "DB"
}
# End tags
aurora_mcps_postgresdb_paramater_group_01_name   = "vz-vss-mcps-dev-postgresdb-paramater-group"
aurora_mcps_postgresdb_paramater_group_01_family = "aurora-postgresql10"
aurora_mcps_postgresdb_paramater_group_01_desc   = "Aurora mcps dev DB parameter group"
aurora_mcps_postgresdb_cluster_01_name           = "vz-vss-mcps-dev-postgresdb-cluster"
aurora_mcps_postgresdb_cluster_01_family         = "aurora-postgresql10"
aurora_mcps_postgresdb_cluster_01_desc           = "Aurora mcps dev DB cluster group"
aurora_mcps_rds_aurora_apply_immediately         = true
# End aurora.tf variables
#cloudwatch.tf variables
cloudwatch_mcps_cloudwatch_name                          = "vz-vss-mcps-dev-cloudwatch"
cloudwatch_mcps_cloudwatch_retention_in_days             = "30"
cloudwatch_mcps_cloudwatch_stream_names                  = ["postgresql"]
cloudwatch_mcps_cloudwatch_iam_role_name                 = "mcps"
cloudwatch_mcps_cloudwatch_iam_role_policy_name          = "logs"
cloudwatch_mcps_cloudwatch_principal_service_identifiers = ["cloudtrail.amazonaws.com","vpc-flow-logs.amazonaws.com"]
cloudwatch_mcps_cloudwatch_sns                                      = "vz-vss-dev-mcps-monitoring"
# Cloudwatch tags
cloudwatch_mcps_cloudwatch_tags                          = {
  "Name"         = "vz-vss-dev1-mcps-rds-cloudwatch",
  "Team"         = "mcps",
  "Userid"       = "",
  "Email"        = "",
  "Purpose"      = "Cloudwatch",
  "Vsad"         = "",
  "Environment"  = "Nonprod"
  "Level"        = "Dev1"
  "Organization" = "VSS"
  "Role"         = "DB"
}

main.tf
106 bytes
1
2
3
4
5
6
7
8
provider "aws" {
  region = "us-east-1"
  version = "v2.70.0"
}
provider "random" {
  version = "2.3.1"
}

output.tf
350 bytes
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
output "account_id" {
  value = "${data.aws_caller_identity.current.account_id}"
}
output "caller_arn" {
  value = "${data.aws_caller_identity.current.arn}"
}
output "caller_user" {
  value = "${data.aws_caller_identity.current.user_id}"
}
output "kms_arn" {
  description = "ARN for kms aurora key"
  value       = "${module.mcps_kms.key_arn}"
}
tf_init.sh
412 bytes
1
2
3
4
5
6
7
8
9
10
11
12
13
14
#!/usr/bin/env bash
set -euo pipefail
aws sts get-caller-identity
# Initializes the terraform s3 backend
terraform init \
    -backend-config "key=mcps/${ENVIRONMENT}/mcps" \
    -backend-config "bucket=vz-vss-us-east-1-dev-leda-terraform-state" \
    -backend-config "region=us-east-1" \
    -backend-config "dynamodb_table=vz-vss-us-east-1-dev-mcs-state-lock-dynamo" \
    -reconfigure \
    -input=false \
    
variables.tf
2.52 KiB
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
# Start Variables for aurora_kms.tf
variable "mcps_kms_description" {}
variable "mcps_kms_deletion_windows_days" {}
variable "mcps_kms_enable_key_rotation" {}
variable "mcps_kms_alias_name" {}
variable "mcps_kms_tags" {
  type    = "map"
  default = {}
}
# End Variables for kms_aurora_key.tf
# Start Variables for aurora.tf
variable "mcps_rds_aurora_name" {}
variable "mcps_rds_aurora_eng" {}
variable "mcps_rds_aurora_eng_version" {}
variable "mcps_rds_aurora_storage_encrypt" {}
variable "mcps_rds_aurora_replica_count" {}
variable "mcps_rds_aurora_replica_autoscaling" {}
variable "mcps_rds_aurora_replica_scale_min" {}
variable "mcps_rds_aurora_replica_scale_max" {}
variable "mcps_rds_aurora_deletion_protection" {}
variable "aurora_mcps_rds_aurora_apply_immediately" {}
variable "iam_database_authentication_enabled" {}
variable "mcps_rds_aurora_cloudwatch_create_alarms" {}
variable "mcps_secret_name" {}
variable "mcps_user_name" {}
variable "mcps_rds_aurora_instance_type" {}
variable "mcps_rds_aurora_monitoring_interval" {}
variable "mcps_rds_database_name" {}
variable "aurora_mcps_postgresdb_paramater_group_01_name" {}
variable "aurora_mcps_postgresdb_paramater_group_01_family" {}
variable "aurora_mcps_postgresdb_paramater_group_01_desc" {}
variable "aurora_mcps_postgresdb_cluster_01_name" {}
variable "aurora_mcps_postgresdb_cluster_01_family" {}
variable "aurora_mcps_postgresdb_cluster_01_desc" {}
variable "enhanced_monitoring_role_arn" {}
variable "port" {
  description = "The port on which to accept connections"
  default     = ""
}
variable "mcps_rds_aurora_tags" {
  type    = "map"
  default = {}
}
variable "allowed_security_groups" {
  type    = "list"
  default = []
}
# End Variables for aurora.tf
# Start Subnet data
variable "vpcid" {}
variable "subnets" {
  type    = "list"
  default = []
}
# End Subnet data
# Start Variables for cloudwatch_aurora.tf
variable "cloudwatch_mcps_cloudwatch_name" {}
variable "cloudwatch_mcps_cloudwatch_retention_in_days" {}
variable "cloudwatch_mcps_cloudwatch_stream_names" {
  type    = "list"
  default = []
}
variable "cloudwatch_mcps_cloudwatch_iam_role_name" {}
variable "cloudwatch_mcps_cloudwatch_iam_role_policy_name" {}
variable "cloudwatch_mcps_cloudwatch_principal_service_identifiers" {
  type    = "list"
  default = []
}
variable "cloudwatch_mcps_cloudwatch_sns" {}
variable "cloudwatch_mcps_cloudwatch_tags" {
  type    = "map"
  default = {}
}
# End Variables for cloudwatch_aurora.tf
variable "secret_map" {
  default = {
    key1 = "value1"
    key2 = "value2"
  }
  type = "map"
}
